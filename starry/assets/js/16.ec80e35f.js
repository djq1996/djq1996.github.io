(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{168:function(a,t,s){"use strict";s.r(t);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[a._v("#")]),a._v(" Git")]),a._v(" "),s("h2",{attrs:{id:"git-install"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-install","aria-hidden":"true"}},[a._v("#")]),a._v(" git install")]),a._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("ol",[s("li",[a._v("可以直接用命令行安装")]),a._v(" "),s("li",[a._v("可以去 Git 官网上下载 Git 安装程序 安装")])]),a._v(" "),s("h3",{attrs:{id:"检测是否安装成功"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检测是否安装成功","aria-hidden":"true"}},[a._v("#")]),a._v(" 检测是否安装成功")]),a._v(" "),s("p",[a._v("验证是否安装成功")]),a._v(" "),s("p",[a._v("打开命令行输入")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" --version\n")])])]),s("p",[a._v("注意是两个‘-’符号")]),a._v(" "),s("h3",{attrs:{id:"配置用户信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置用户信息","aria-hidden":"true"}},[a._v("#")]),a._v(" 配置用户信息")]),a._v(" "),s("p",[a._v("配置你的 Git 用户和邮箱")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v('# "用户名字"')]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.name\n"),s("span",{attrs:{class:"token comment"}},[a._v('# "邮箱"')]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.email\n")])])]),s("h3",{attrs:{id:"生产密匙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生产密匙","aria-hidden":"true"}},[a._v("#")]),a._v(" 生产密匙")]),a._v(" "),s("p",[a._v("生产秘匙")]),a._v(" "),s("ol",[s("li",[a._v("首先我们先检测电脑曾经是否生成过秘匙")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/.ssh\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("若显示没有此文件：")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("-bash: cd: /Users/mac/.ssh: No such "),s("span",{attrs:{class:"token function"}},[a._v("file")]),a._v(" or directory\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("生成秘匙")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ssh-keygen -t rsa -C "),s("span",{attrs:{class:"token string"}},[a._v('"macbookpro"')]),a._v("\n")])])]),s("p",[a._v("命令要求输入密码 在此我们可以敲三个回车跳过，不用输")]),a._v(" "),s("p",[a._v("执行成功过后我们在输入命令")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/.ssh\n")])])]),s("p",[a._v("进入到文件夹以后 输入")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("ls")]),a._v("\n")])])]),s("p",[a._v("可以查看文件列表")]),a._v(" "),s("p",[a._v("查看公钥")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("cat")]),a._v(" id_rsa.pub\n")])])]),s("p",[a._v("会出现一段编码 ，全部复制")]),a._v(" "),s("h3",{attrs:{id:"github-配置-ssh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-配置-ssh","aria-hidden":"true"}},[a._v("#")]),a._v(" GitHub 配置 ssh")]),a._v(" "),s("p",[a._v("登陆我们的 GitHub 进入设置(setting),选择 ssh，添加新的秘钥")]),a._v(" "),s("h2",{attrs:{id:"git-bash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-bash","aria-hidden":"true"}},[a._v("#")]),a._v(" git bash")]),a._v(" "),s("h3",{attrs:{id:"远程操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远程操作","aria-hidden":"true"}},[a._v("#")]),a._v(" 远程操作")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" remote add pb https://github.com/paulboone/ticgit  "),s("span",{attrs:{class:"token comment"}},[a._v("# 添加远程分支[name] [url]")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),s("span",{attrs:{class:"token comment"}},[a._v("# 查看远程仓库")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" remote -v "),s("span",{attrs:{class:"token comment"}},[a._v("# 查看远程仓库详情地址")]),a._v("\n")])])]),s("h3",{attrs:{id:"分支操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支操作","aria-hidden":"true"}},[a._v("#")]),a._v(" 分支操作")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" br "),s("span",{attrs:{class:"token comment"}},[a._v("# 查看本地分支")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" br -v   "),s("span",{attrs:{class:"token comment"}},[a._v("# 查看分支提交版本")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" br -av "),s("span",{attrs:{class:"token comment"}},[a._v("# 查看所有分支和提交版本")]),a._v("\n")])])]),s("h3",{attrs:{id:"找到-git-提交的-id-值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#找到-git-提交的-id-值","aria-hidden":"true"}},[a._v("#")]),a._v(" 找到 Git 提交的 ID 值")]),a._v(" "),s("p",[a._v("记录每次命令的 操作的 ID")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" reflog\n")])])]),s("h3",{attrs:{id:"更新远程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新远程","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新远程")]),a._v(" "),s("p",[a._v("记录每次命令的 操作的 ID")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch "),s("span",{attrs:{class:"token comment"}},[a._v("# 获取更新 需要手动merge origin/dev | master")]),a._v("\n\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch orgin :temp "),s("span",{attrs:{class:"token comment"}},[a._v("# 获取更新并且新建分支temp 需要merge temp")]),a._v("\n\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" pull  "),s("span",{attrs:{class:"token comment"}},[a._v("# 获取更新并且自动合并")]),a._v("\n")])])]),s("h3",{attrs:{id:"git-撤销修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-撤销修改","aria-hidden":"true"}},[a._v("#")]),a._v(" Git 撤销修改")]),a._v(" "),s("p",[a._v("撤销工作区的修改")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# 注意是‘--’ 如果换成一个‘-’会是切换分支的意思")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -- "),s("span",{attrs:{class:"token function"}},[a._v("file")]),a._v("\n")])])]),s("p",[a._v("撤销对暂存区的修改")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# 这样将会回回到工作区，在执行一遍 git checkout --file 可以撤销工作区修改")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" reset HEAD "),s("span",{attrs:{class:"token function"}},[a._v("file")]),a._v("\n")])])]),s("p",[a._v("版本回退，撤销已经 commit 但是还没有 push 的撤销")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# 表示上一版本  HEAD^^ 上两个版本  HEAD~100 上一百个版本")]),a._v("\n1. "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" reset --hard HEAD^\n"),s("span",{attrs:{class:"token comment"}},[a._v("# ID 获取ID可以用git reflog")]),a._v("\n2. "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" reset --hard 3628164\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" reset HEAD^ --soft "),s("span",{attrs:{class:"token comment"}},[a._v("#（保存更改，返回上次提交）")]),a._v("\n\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" reset HEAD^ --hard "),s("span",{attrs:{class:"token comment"}},[a._v("#（放弃更改，返回上次提交）")]),a._v("\n")])])]),s("h3",{attrs:{id:"分支的-upstream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支的-upstream","aria-hidden":"true"}},[a._v("#")]),a._v(" 分支的 upstream")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# upstream的设置")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" branch --set-upstream-to origin/master\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -u origin/master\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 在推送的同时，同时设置upstream")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" push --set-upstream origin master "),s("span",{attrs:{class:"token comment"}},[a._v("# 新建分支")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" push -u origin master "),s("span",{attrs:{class:"token comment"}},[a._v("# 简写")]),a._v("\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("加上了-u 参数")]),a._v(" "),s("p",[a._v("由于远程库是空的，我们第一次推送 master 分支时，加上了-u 参数，Git 不但会把本地的 master 分支内容推送的远程新的 master 分支，还会把本地的 master 分支和远程的 master 分支关联起来，在以后的推送或者拉取时就可以简化命令。")])]),a._v(" "),s("h3",{attrs:{id:"分支合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支合并","aria-hidden":"true"}},[a._v("#")]),a._v(" 分支合并")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# 这样合并分支没有记录信息")]),a._v("\n1. "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" merge dev\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 这样合并分支有分支合并记录  有commit")]),a._v("\n2. "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-ff -m "),s("span",{attrs:{class:"token string"}},[a._v('"merge with no-ff"')]),a._v(" dev\n")])])]),s("h3",{attrs:{id:"暂存开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存开发","aria-hidden":"true"}},[a._v("#")]),a._v(" 暂存开发")]),a._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("技巧")]),a._v(" "),s("p",[a._v("保存当前开发进度，用来新建分支解决 bug")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# 缓存")]),a._v("\n1. "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" stash\n\n"),s("span",{attrs:{class:"token comment"}},[a._v("# bug 解决完毕")]),a._v("\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 查看缓存开发进度保存")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" stash list  /\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 恢复")]),a._v("\n2. "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" stash apply\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 恢复并删除暂存")]),a._v("\n3. "),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" stash pop\n")])])]),s("p",[a._v("查看文件历史记录")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" log --follow -p "),s("span",{attrs:{class:"token function"}},[a._v("file")]),a._v("\n")])])]),s("h2",{attrs:{id:"忽略已经提交-git-的文件或者文件夹"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#忽略已经提交-git-的文件或者文件夹","aria-hidden":"true"}},[a._v("#")]),a._v(" 忽略已经提交 git 的文件或者文件夹")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 已提交到git远程仓库的文件")]),a._v("\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 如果当前文件是已经commit ,push到远程仓库后了，.gitignore里面再配置是不起作用的，此时需要清除对此文件的追踪")]),a._v("\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 文件")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("rm")]),a._v(" –cached xxx\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 文件夹名称取消追踪")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("rm")]),a._v(" -r –cached\n\n"),s("span",{attrs:{class:"token comment"}},[a._v("# 在.gitignored中添加需要过滤的文件")]),a._v("\n"),s("span",{attrs:{class:"token comment"}},[a._v("# commit, push提交.gitignore")]),a._v("\n")])])]),s("h3",{attrs:{id:"多人协作模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多人协作模式","aria-hidden":"true"}},[a._v("#")]),a._v(" 多人协作模式")]),a._v(" "),s("ol",[s("li",[a._v("首先，可以试图用 git push [origin][branch-name] 推送自己的修改；")]),a._v(" "),s("li",[a._v("如果推送失败，则因为远程分支比你的本地更新，需要先用 git pull 试图合并；")]),a._v(" "),s("li",[a._v("如果合并有冲突，则解决冲突，并在本地提交；")]),a._v(" "),s("li",[a._v("没有冲突或者解决掉冲突后，再用 git push origin branch-name 推送就能成功！")])]),a._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("注意")]),a._v(" "),s("p",[a._v("如果 git pull 提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令 git branch --set-upstream branch-name origin/branch-name。")])]),a._v(" "),s("h2",{attrs:{id:"git-命令简写配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-命令简写配置","aria-hidden":"true"}},[a._v("#")]),a._v(" git 命令简写配置")]),a._v(" "),s("h3",{attrs:{id:"git-自定义命令简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-自定义命令简介","aria-hidden":"true"}},[a._v("#")]),a._v(" git 自定义命令简介")]),a._v(" "),s("p",[a._v("我们可以设置一些 简化版 例如：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# 这样 git st == git status 具体")]),a._v("\n\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.st status "),s("span",{attrs:{class:"token comment"}},[a._v("# 仓库状态")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.co checkout "),s("span",{attrs:{class:"token comment"}},[a._v("#切换分支")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.ci commit "),s("span",{attrs:{class:"token comment"}},[a._v("#commit")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.br branch "),s("span",{attrs:{class:"token comment"}},[a._v("#分支信息")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.unstage "),s("span",{attrs:{class:"token string"}},[a._v("'reset HEAD'")]),a._v(" "),s("span",{attrs:{class:"token comment"}},[a._v("#重置某文件")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.last "),s("span",{attrs:{class:"token string"}},[a._v("'log -1'")]),a._v(" "),s("span",{attrs:{class:"token comment"}},[a._v("#查看最后一次提交")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.lg "),s("span",{attrs:{class:"token string"}},[a._v("\"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"")]),a._v("#变态好看的提交记录\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("执行多行命令")]),a._v(" "),s("p",[a._v("多个命令一起执行 加个 &&\n命令折行执行（容易观看） \\")])]),a._v(" "),s("h3",{attrs:{id:"git-简写配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-简写配置","aria-hidden":"true"}},[a._v("#")]),a._v(" git 简写配置")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.s status "),s("span",{attrs:{class:"token operator"}},[a._v("&&")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.co checkout "),s("span",{attrs:{class:"token operator"}},[a._v("&&")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.ci commit "),s("span",{attrs:{class:"token operator"}},[a._v("&&")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.br branch "),s("span",{attrs:{class:"token operator"}},[a._v("&&")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.unstage "),s("span",{attrs:{class:"token string"}},[a._v("'reset HEAD'")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("&&")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.last "),s("span",{attrs:{class:"token string"}},[a._v("'log -1'")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("&&")]),a._v("\n"),s("span",{attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.lg "),s("span",{attrs:{class:"token string"}},[a._v("\"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"")]),a._v("\n")])])]),s("h2",{attrs:{id:"git-查看-修改用户名和邮箱地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-查看-修改用户名和邮箱地址","aria-hidden":"true"}},[a._v("#")]),a._v(" git 查看/修改用户名和邮箱地址")]),a._v(" "),s("h3",{attrs:{id:"用户名和邮箱地址的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户名和邮箱地址的作用","aria-hidden":"true"}},[a._v("#")]),a._v(" 用户名和邮箱地址的作用")]),a._v(" "),s("pre",[s("code",[a._v("用户名和邮箱地址是本地git客户端的一个变量，不随git库而改变。\n\n每次commit都会用用户名和邮箱纪录。\n\ngithub的contributions统计就是按邮箱来统计的。\n")])]),a._v(" "),s("h3",{attrs:{id:"查看用户名和邮箱地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看用户名和邮箱地址","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看用户名和邮箱地址")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config user.name  # 如果不显示就是没有设置\n\ngit config user.email\n")])])]),s("h3",{attrs:{id:"修改用户名和邮箱地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改用户名和邮箱地址","aria-hidden":"true"}},[a._v("#")]),a._v(" 修改用户名和邮箱地址")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('git config --global user.name "username"\n\ngit config --global user.email "email"\n')])])]),s("h3",{attrs:{id:"查看-git-全局配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看-git-全局配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看 Git 全局配置")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config --list\n\ngit config --global credential.helper store\n")])])]),s("h2",{attrs:{id:"删除大的-依赖文件-的-git-监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除大的-依赖文件-的-git-监听","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除大的 依赖文件 的 git 监听")]),a._v(" "),s("p",[a._v("例如：node_moudel")]),a._v(" "),s("p",[a._v("首先在.gitignore 中写入下面代码")]),a._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[a._v("node_modules"),s("span",{attrs:{class:"token operator"}},[a._v("/")]),a._v("\njspm_packages"),s("span",{attrs:{class:"token operator"}},[a._v("/")]),a._v("\n")])])]),s("p",[a._v("在命令行进入仓库目录\n删除 github 上.gitignore 中新加的选项")]),a._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[a._v("git rm "),s("span",{attrs:{class:"token operator"}},[a._v("-")]),a._v("r –cached "),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("将删除后的 add")]),a._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[a._v("git add "),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("再 commit")]),a._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[a._v("git commit "),s("span",{attrs:{class:"token operator"}},[a._v("-")]),a._v("m”"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("gitignore "),s("span",{attrs:{class:"token keyword"}},[a._v("is")]),a._v(" now working”\n")])])]),s("p",[a._v("最后 push 一下")]),a._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[a._v("git push\n")])])]),s("p",[a._v("好了，大功告成，再去看我的 github，太干净了。。")])])}],!1,null,null,null);t.default=e.exports}}]);